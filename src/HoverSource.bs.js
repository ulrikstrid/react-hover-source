// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Prismjs from "prismjs";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as HtmlBeautify from "html-beautify";
import * as Server from "react-dom/server";
import * as Fragment$ReactTemplate from "./Fragment.bs.js";
import * as ReactPerimiter$ReactTemplate from "./ReactPerimiter.bs.js";

var component = ReasonReact.reducerComponent("HoverSource");

function make(children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              var keyDownListener = function (e) {
                setTimeout((function () {
                        return Curry._1(self[/* send */3], /* ToggleOutline */1);
                      }), 1200);
                var match = e.key;
                if (match === "Alt") {
                  return Curry._1(self[/* send */3], /* ToggleOutline */1);
                } else {
                  return /* () */0;
                }
              };
              document.addEventListener("keydown", keyDownListener);
              return Curry._1(self[/* onUnmount */4], (function () {
                            document.removeEventListener("keydown", keyDownListener);
                            return /* () */0;
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* show */0];
              var display = match ? "block" : "none";
              return ReasonReact.element(/* None */0, /* None */0, Fragment$ReactTemplate.make(/* array */[
                              ReasonReact.element(/* None */0, /* None */0, ReactPerimiter$ReactTemplate.make(0, (function () {
                                          return Curry._1(self[/* send */3], /* Toggle */0);
                                        }), (function () {
                                          return Curry._1(self[/* send */3], /* Toggle */0);
                                        }), children)),
                              React.createElement("pre", {
                                    className: "language-html",
                                    style: {
                                      border: "2px solid black",
                                      display: display,
                                      padding: "10px",
                                      position: "fixed",
                                      top: "40px",
                                      zIndex: "10"
                                    }
                                  }, React.createElement("code", {
                                        dangerouslySetInnerHTML: {
                                          __html: Prismjs.highlight(HtmlBeautify(Server.renderToStaticMarkup(Curry._1(children, (function () {
                                                              return /* () */0;
                                                            })))), Prismjs.languages.html)
                                        }
                                      }))
                            ]));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* show */false,
                      /* outline */false
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* show */state[/* show */0],
                            /* outline */!state[/* outline */1]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* show */!state[/* show */0],
                            /* outline */state[/* outline */1]
                          ]]);
              }
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.children);
      }));

var nullRef = null;

export {
  component ,
  nullRef ,
  make ,
  $$default ,
  $$default as default,
  
}
/* component Not a pure module */
